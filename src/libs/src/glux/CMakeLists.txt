CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(glux)

OPTION(GLUX_BUILD_SAMPLES "Build gluX sample programs" OFF)

SET(GLUX_SOURCES 
src/gluxLoader.cpp
src/gluxPlugin.cpp
)
		
SET(GLUX_HEADERS 
src/gluxLoader.h
src/gluxPlugin.h
)

FIND_PACKAGE(Perl)
FIND_PACKAGE(OpenGL)
FIND_PACKAGE(GLUT)

IF( NOT PERL_FOUND )
MESSAGE(SEND_ERROR "Perl not found - skipping source regeneration.")
ENDIF( NOT PERL_FOUND )

IF(NOT EMSCRIPTEN)
IF( NOT OPENGL_FOUND )
MESSAGE(FATAL_ERROR "OpenGL not found")
ENDIF( NOT OPENGL_FOUND )
ENDIF(NOT EMSCRIPTEN)

IF( PERL_FOUND )

  #IF(APPLE)
  #SET(GLEXT_FILE glext_apple.h)
  #ELSE(APPLE)
SET(GLEXT_FILE glext.h)
#ENDIF(APPLE)

ADD_CUSTOM_COMMAND(
   OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/src/glux.cpp ${CMAKE_CURRENT_SOURCE_DIR}/src/glux.h
   COMMAND ${PERL_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/script/gen_plugins.pl ${CMAKE_CURRENT_SOURCE_DIR}/src  ${CMAKE_CURRENT_SOURCE_DIR}/script/${GLEXT_FILE} ${CMAKE_CURRENT_SOURCE_DIR}/script/wglext.h ${CMAKE_CURRENT_SOURCE_DIR}/script/glxext.h
   DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/script/glext.h ${CMAKE_CURRENT_SOURCE_DIR}/script/wglext.h ${CMAKE_CURRENT_SOURCE_DIR}/script/glxext.h
)
ENDIF( PERL_FOUND )

INCLUDE_DIRECTORIES(src)
LINK_DIRECTORIES(${GLUX_BINARY_DIR}) 

ADD_LIBRARY(glux STATIC ${GLUX_SOURCES} ${GLUX_HEADERS} ${CMAKE_CURRENT_SOURCE_DIR}/src/glux.cpp ${CMAKE_CURRENT_SOURCE_DIR}/src/glux.h)
SET_TARGET_PROPERTIES(glux PROPERTIES DEBUG_POSTFIX "-d")
TARGET_LINK_LIBRARIES(glux ${OPENGL_LIBRARY})

INSTALL(TARGETS glux
  RUNTIME DESTINATION ${CMAKE_SOURCE_DIR}/bin
  LIBRARY DESTINATION ${CMAKE_SOURCE_DIR}/lib
  ARCHIVE DESTINATION ${CMAKE_SOURCE_DIR}/lib
)

IF( NOT GLUT_FOUND )

MESSAGE(STATUS "glut not found (only needed for samples, not for glux itself)")

ELSE( NOT GLUT_FOUND )

if (GLUX_BUILD_SAMPLES)
ADD_SUBDIRECTORY(samples)
endif (GLUX_BUILD_SAMPLES)

ENDIF( NOT GLUT_FOUND )
